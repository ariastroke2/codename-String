[gd_scene load_steps=12 format=3 uid="uid://c2rrljysn5itx"]

[ext_resource type="Script" path="res://MouseFollow.gd" id="1_fetxj"]
[ext_resource type="Texture2D" uid="uid://c5xyt73wod5gx" path="res://Middle.png" id="1_nkvrp"]
[ext_resource type="Texture2D" uid="uid://b0b5frxcvtw73" path="res://Bottom.png" id="2_m8muq"]
[ext_resource type="Script" path="res://MouseFollo2.gd" id="2_wrbbh"]
[ext_resource type="Texture2D" uid="uid://deop1fdl0jjgy" path="res://TurretGame-05.png" id="3_i82e6"]
[ext_resource type="Texture2D" uid="uid://sm3p864soxhc" path="res://Top.png" id="4_u22ar"]

[sub_resource type="GDScript" id="GDScript_m0kn7"]
script/source = "extends Node2D

@export var segment_count: int = 10
@export var segment_length: float = 20.0
@export var collider_radius: float = 10.0
@export var rope_friction: float = 10.0
@export var stiffness: int = 5  # More iterations = tighter rope
@export var elasticity: float = 0
@export var damping_factor: float = 0.1  # Adjust this value to control how much damping is applied
@export var start: RigidBody2D
@export var end: RigidBody2D

var nodes: Array[RigidBody2D] = []
var colliders: Array[SegmentShape2D] = []

func _ready():
	create_rope()

func create_rope():
	print(\"Creating rope!\")
	var start_pos = global_position

# Create a new rigidbody for each rope node.
	for i in range(segment_count):
		# Create rope node as rigidbody
		var node = RigidBody2D.new()
		
		# Setup rigidbody2D
		node.gravity_scale = 0
		node.position = Vector2.RIGHT * segment_length * i
		node.collision_layer = 2
		node.collision_mask = 1
		node.lock_rotation = true
		
		# Setup rigidbody rope material
		var material = PhysicsMaterial.new()
		material.rough = true
		material.friction = rope_friction;
		
		# Add rope node to rope
		nodes.append(node)
		add_child(node)
		
		# Give a shape to the rigidbody
		var collider = CollisionShape2D.new()  # Create a CollisionShape2D
		var colliderShape = SegmentShape2D.new()  # Create a CircleShape2D
		colliderShape.a = Vector2.ZERO
		colliderShape.b = Vector2.ZERO
		colliders.append(colliderShape)
		
		collider.shape = colliderShape  # Assign the shape to the collision
		node.add_child(collider)

func _process(delta):
	solve_rope(delta)
	update_visuals()

func solve_rope(delta : float):	
	# Solve first spring
	apply_spring(start, nodes[0], delta)
	apply_damping(start, nodes[0], delta)
	
	for i in range(nodes.size() - 1):
		apply_spring(nodes[i], nodes[i + 1], delta)
		apply_damping(nodes[i], nodes[i + 1], delta)
		
		update_collider(colliders[i], nodes[i + 1].position - nodes[i].position, Vector2.ZERO)
		
	apply_spring(nodes[nodes.size() - 1], end, delta)
	apply_damping(nodes[nodes.size() - 1], end, delta)
	# nodes[0].add_constant_force()
	
func apply_spring(startNode: RigidBody2D, endNode: RigidBody2D, delta: float):
	var springVector: Vector2  = startNode.position - endNode.position
	var distance: float = springVector.length()
	var direction: Vector2 = springVector.normalized()
	
	if distance == 0:  # Prevent division by zero
		return
		
	var stretch_factor = abs(distance - segment_length) * elasticity * delta

	var force: Vector2 = (direction) * (distance - segment_length) * (stiffness) #* stretch_factor
	endNode.apply_force(force)
	startNode.apply_force(-force)
	
func apply_damping(node: RigidBody2D, other_node: RigidBody2D, delta: float):
	# Calculate the velocity difference between the two nodes
	var velocity_diff: Vector2 = node.linear_velocity - other_node.linear_velocity

	# Calculate the damping force based on the velocity difference
	var damping_force: Vector2 = velocity_diff * damping_factor

	# Apply damping force to the node
	node.apply_force(-damping_force * delta)
	other_node.apply_force(damping_force * delta)
	
func update_collider(collider: SegmentShape2D, a: Vector2, b: Vector2):
	collider.a = a
	collider.b = b
	

func update_visuals():
	# Simple line drawing using a `Line2D`
	var line = $DrawRope  # Make sure a `Line2D` node exists as a child
	line.clear_points()
	
	line.add_point(start.position)
	for node in nodes:
		line.add_point(node.position)
	line.add_point(end.position)
"

[sub_resource type="CircleShape2D" id="CircleShape2D_3a8kh"]

[sub_resource type="PhysicsMaterial" id="PhysicsMaterial_dbjwp"]
friction = 10000.0
rough = true

[sub_resource type="CircleShape2D" id="CircleShape2D_bjqq8"]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_fmuxw"]

[node name="TestScene" type="Node2D"]

[node name="Rope" type="Node2D" parent="." node_paths=PackedStringArray("start", "end")]
position = Vector2(191, 110)
script = SubResource("GDScript_m0kn7")
segment_count = 8
segment_length = 10.0
rope_friction = 100.0
stiffness = 60
elasticity = 20.0
damping_factor = 500.0
start = NodePath("Start")
end = NodePath("End")

[node name="DrawRope" type="Line2D" parent="Rope"]
texture_repeat = 2
points = PackedVector2Array(338, 143, 177, 50, 69, 120)
width = 30.0
texture = ExtResource("1_nkvrp")
texture_mode = 1
joint_mode = 1
begin_cap_mode = 2
end_cap_mode = 2
round_precision = 2

[node name="End" type="RigidBody2D" parent="Rope"]
position = Vector2(251, 30)
collision_layer = 2
mass = 2.0
script = ExtResource("2_wrbbh")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Rope/End"]
shape = SubResource("CircleShape2D_3a8kh")

[node name="Sprite2D" type="Sprite2D" parent="Rope/End"]
scale = Vector2(0.15, 0.15)
texture = ExtResource("4_u22ar")

[node name="Start" type="RigidBody2D" parent="Rope"]
position = Vector2(251, 30)
collision_layer = 2
script = ExtResource("1_fetxj")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Rope/Start"]
shape = SubResource("CircleShape2D_3a8kh")

[node name="Sprite2D" type="Sprite2D" parent="Rope/Start"]
scale = Vector2(0.15, 0.15)
texture = ExtResource("2_m8muq")

[node name="StaticBody2D2" type="StaticBody2D" parent="."]
position = Vector2(722, 317)
collision_mask = 3
physics_material_override = SubResource("PhysicsMaterial_dbjwp")

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D2"]
shape = SubResource("CircleShape2D_bjqq8")

[node name="Sprite2D" type="Sprite2D" parent="StaticBody2D2"]
scale = Vector2(0.03, 0.03)
texture = ExtResource("3_i82e6")

[node name="StaticBody2D3" type="StaticBody2D" parent="."]
position = Vector2(844, 125)
collision_mask = 3
physics_material_override = SubResource("PhysicsMaterial_dbjwp")

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D3"]
shape = SubResource("CircleShape2D_bjqq8")

[node name="Sprite2D" type="Sprite2D" parent="StaticBody2D3"]
scale = Vector2(0.03, 0.03)
texture = ExtResource("3_i82e6")

[node name="StaticBody2D4" type="StaticBody2D" parent="."]
position = Vector2(296, 382)
collision_mask = 3
physics_material_override = SubResource("PhysicsMaterial_dbjwp")

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D4"]
shape = SubResource("CircleShape2D_bjqq8")

[node name="Sprite2D" type="Sprite2D" parent="StaticBody2D4"]
scale = Vector2(0.03, 0.03)
texture = ExtResource("3_i82e6")

[node name="StaticBody2D5" type="StaticBody2D" parent="."]
position = Vector2(240, 676)
scale = Vector2(40.55, 10)
collision_mask = 3
physics_material_override = SubResource("PhysicsMaterial_dbjwp")

[node name="CollisionShape2D" type="CollisionShape2D" parent="StaticBody2D5"]
shape = SubResource("RectangleShape2D_fmuxw")

[node name="Sprite2D" type="Sprite2D" parent="StaticBody2D5"]
scale = Vector2(0.03, 0.03)
texture = ExtResource("3_i82e6")
